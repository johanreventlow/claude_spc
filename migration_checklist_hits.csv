file,kind,line,snippet
global.R,parallel_state,62,    if (!is.null(values$current_data) && !is.null(app_state$data$current_data)) {
global.R,parallel_state,63,"      if (!identical(values$current_data, app_state$data$current_data)) {"
global.R,parallel_state,71,    if (!is.null(values$file_uploaded) && !is.null(app_state$session$file_uploaded)) {
global.R,parallel_state,72,      if (values$file_uploaded != app_state$session$file_uploaded) {
global.R,parallel_state,558,  app_state$events <- reactiveValues(
global.R,parallel_state,581,  app_state$data <- reactiveValues(
global.R,parallel_state,592,  app_state$columns <- reactiveValues(
global.R,parallel_state,613,  app_state$session <- reactiveValues(
global.R,parallel_state,623,  app_state$ui <- reactiveValues(
global.R,parallel_state,628,  app_state$navigation <- reactiveValues(
global.R,parallel_state,633,  app_state$visualization <- reactiveValues(
global.R,loose_observers,656,"#' app_state$events, triggering any observeEvent() listeners."
global.R,loose_observers,663,"#' emit$data_loaded()  # Triggers observeEvent(app_state$events$data_loaded, ...)"
global.R,triggers,556,  # REACTIVE EVENT BUS: Central event system for all triggers
global.R,triggers,629,    trigger = 0  # Counter for triggering navigation-dependent reactives
global.R,triggers,648,#' to trigger specific events throughout the application.
global.R,triggers,656,"#' app_state$events, triggering any observeEvent() listeners."
global.R,session_couple,71,    if (!is.null(values$file_uploaded) && !is.null(app_state$session$file_uploaded)) {
global.R,session_couple,72,      if (values$file_uploaded != app_state$session$file_uploaded) {
global.R,isolate_usage,44,      is_reactive_context <- isolate({ TRUE })
global.R,isolate_usage,657,#' Using isolate() ensures the emit functions don't create
global.R,isolate_usage,669,      isolate({
global.R,isolate_usage,676,      isolate({
global.R,isolate_usage,684,      isolate({
global.R,isolate_usage,691,      isolate({
global.R,isolate_usage,698,      isolate({
global.R,isolate_usage,706,      isolate({
global.R,isolate_usage,713,      isolate({
global.R,isolate_usage,721,      isolate({
global.R,isolate_usage,729,      isolate({
global.R,isolate_usage,736,      isolate({
R/app_server.R,parallel_state,39,  values <- reactiveValues()  # Empty values for compatibility
R/app_server.R,loose_observers,203,    observe({
R/app_server.R,loose_observers,220,  observe({
R/app_server.R,triggers,120,          # Emit event to trigger downstream effects
R/app_server.R,triggers,213,      # Unified state: Use centralized state for reactive triggers
R/app_server.R,session_couple,14,"  session_debugger <- debug_session_lifecycle(session$token, session)"
R/app_server.R,session_couple,19,"  log_debug(paste(""Session ID:"", session$token), ""APP_SERVER"")"
R/app_server.R,session_couple,22,"            level = ""INFO"", session_id = session$token)"
R/app_server.R,session_couple,38,"  debug_log(""Creating minimal reactive values"", ""SESSION_LIFECYCLE"", level = ""TRACE"", session_id = session$token)"
R/app_server.R,session_couple,45,"  debug_log(""Creating centralized app_state"", ""SESSION_LIFECYCLE"", level = ""TRACE"", session_id = session$token)"
R/app_server.R,session_couple,56,"  initial_snapshot <- debug_state_snapshot(""app_initialization"", app_state, session_id = session$token)"
R/app_server.R,session_couple,72,            session_id = session$token)
R/app_server.R,session_couple,76,"    autoload_tracer <- debug_workflow_tracer(""test_mode_auto_load"", app_state, session$token)"
R/app_server.R,session_couple,123,          app_state$session$file_uploaded <- TRUE
R/app_server.R,session_couple,125,          app_state$session$user_started_session <- TRUE
R/app_server.R,session_couple,135,"          debug_state_snapshot(""after_test_data_autoload"", app_state, session_id = session$token)"
R/app_server.R,session_couple,196,"  debug_log(""All server components setup completed"", ""SESSION_LIFECYCLE"", level = ""INFO"", session_id = session$token)"
R/app_server.R,session_couple,229,  session$onSessionEnded(function() {
R/app_server.R,session_couple,231,"    debug_log(""Session cleanup initiated"", ""SESSION_LIFECYCLE"", level = ""INFO"", session_id = session$token)"
R/app_server.R,session_couple,251,              session_id = session$token)
R/app_ui.R,triggers,64,"            console.log('Found saved session data, triggering auto-restore');"
R/fct_chart_helpers.R,qic_calls,160,  # Skift column validation handled by qicharts2::qic() internally
R/fct_data_processing.R,parallel_state,484,"    cat(""DEBUG: [UI_SYNC_TRIGGER] Legacy values$ui_sync_needed assignment skipped (unified state only)\n"")"
R/fct_data_processing.R,parallel_state,548,    # PHASE 4: Legacy values$ access removed - now using unified state only
R/fct_data_processing.R,parallel_state,549,"    cat(""DEBUG: [AUTO_DETECT_FUNC] - Legacy values$current_data access skipped (unified state only)\n"")"
R/fct_data_processing.R,parallel_state,761,"  # NOTE: values$original_data bevares uændret, kun values$current_data modificeres"
R/fct_data_processing.R,parallel_state,824,                # Legacy values$current_data assignment removed
R/fct_data_processing.R,parallel_state,979,    # PHASE 4: Legacy values$auto_detected_columns assignment removed - now using unified state only
R/fct_data_processing.R,parallel_state,980,"    cat(""DEBUG: [PHASE4] Skipping legacy values$auto_detected_columns assignment (unified state handles this)\n"")"
R/fct_data_processing.R,parallel_state,1422,  # Uses emit$session_reset() events and app_state instead of values$
R/fct_data_processing.R,loose_observers,51,  observe({
R/fct_data_processing.R,loose_observers,135,  observeEvent({
R/fct_data_processing.R,loose_observers,180,  # The emit$data_loaded() -> observeEvent(app_state$events$data_loaded) -> emit$auto_detection_started()
R/fct_data_processing.R,loose_observers,187,  # The observeEvent(app_state$events$auto_detection_started) handles all auto-detection logic
R/fct_data_processing.R,loose_observers,195,"  observeEvent(input$auto_detect_columns, {"
R/fct_data_processing.R,loose_observers,281,"  observeEvent(input$edit_column_names, {"
R/fct_data_processing.R,loose_observers,286,"  observeEvent(input$confirm_column_names, {"
R/fct_data_processing.R,loose_observers,291,"  observeEvent(input$add_column, {"
R/fct_data_processing.R,loose_observers,295,"  observeEvent(input$confirm_add_col, {"
R/fct_data_processing.R,loose_observers,1200,"  app_data_reactive <- eventReactive(app_state$navigation$trigger, {"
R/fct_data_processing.R,loose_observers,1270,"  observeEvent(input$main_data_table,"
R/fct_data_processing.R,loose_observers,1396,"  observeEvent(input$add_row, {"
R/fct_data_processing.R,direct_input,107,        current_x <- input$x_column
R/fct_data_processing.R,direct_input,108,        current_y <- input$y_column
R/fct_data_processing.R,direct_input,109,        current_n <- input$n_column
R/fct_data_processing.R,direct_input,110,        current_skift <- input$skift_column
R/fct_data_processing.R,direct_input,111,        current_frys <- input$frys_column
R/fct_data_processing.R,direct_input,112,        current_kommentar <- input$kommentar_column
R/fct_data_processing.R,direct_input,154,"      x_empty <- is.null(input$x_column) || input$x_column == """""
R/fct_data_processing.R,direct_input,155,"      y_empty <- is.null(input$y_column) || input$y_column == """""
R/fct_data_processing.R,direct_input,195,"  observeEvent(input$auto_detect_columns, {"
R/fct_data_processing.R,direct_input,215,"    if ((is.null(input$x_column) || input$x_column == """") ||"
R/fct_data_processing.R,direct_input,216,"      (is.null(input$y_column) || input$y_column == """")) {"
R/fct_data_processing.R,direct_input,220,"    chart_type <- get_qic_chart_type(if (is.null(input$chart_type)) ""Seriediagram (Run Chart)"" else input$chart_type)"
R/fct_data_processing.R,direct_input,224,"    if (!is.null(input$y_column) && input$y_column != """" && input$y_column %in% names(current_data_check)) {"
R/fct_data_processing.R,direct_input,225,      y_data <- current_data_check[[input$y_column]]
R/fct_data_processing.R,direct_input,229,"          warnings <- c(warnings, paste(""Y-kolonne '"", input$y_column, ""' er ikke numerisk""))"
R/fct_data_processing.R,direct_input,236,"      if (is.null(input$n_column) || input$n_column == """") {"
R/fct_data_processing.R,direct_input,238,      } else if (input$n_column %in% names(current_data_check)) {
R/fct_data_processing.R,direct_input,239,        n_data <- current_data_check[[input$n_column]]
R/fct_data_processing.R,direct_input,243,"            warnings <- c(warnings, paste(""Nævner-kolonne '"", input$n_column, ""' er ikke numerisk""))"
R/fct_data_processing.R,direct_input,250,"    selected_cols <- c(input$x_column, input$y_column, input$n_column)"
R/fct_data_processing.R,direct_input,281,"  observeEvent(input$edit_column_names, {"
R/fct_data_processing.R,direct_input,286,"  observeEvent(input$confirm_column_names, {"
R/fct_data_processing.R,direct_input,291,"  observeEvent(input$add_column, {"
R/fct_data_processing.R,direct_input,295,"  observeEvent(input$confirm_add_col, {"
R/fct_data_processing.R,direct_input,1167,"  req(input$new_col_name, current_data_check)"
R/fct_data_processing.R,direct_input,1169,  new_col_name <- input$new_col_name
R/fct_data_processing.R,direct_input,1170,  new_col_type <- input$new_col_type
R/fct_data_processing.R,direct_input,1270,"  observeEvent(input$main_data_table,"
R/fct_data_processing.R,direct_input,1301,          new_data <- input$main_data_table
R/fct_data_processing.R,direct_input,1396,"  observeEvent(input$add_row, {"
R/fct_data_processing.R,triggers,24,#'   \item Auto-detektion trigger ved file upload
R/fct_data_processing.R,triggers,52,"    log_debug(""Column update observer triggered"", ""COLUMN_MGMT"")"
R/fct_data_processing.R,triggers,134,  # Auto-detekterings trigger flag - bruges kun til manuel triggering (ikke test mode)
R/fct_data_processing.R,triggers,140,"      cat(""DEBUG: [AUTO_DETECT] Manual auto-detect observer triggered\n"")"
R/fct_data_processing.R,triggers,167,        app_state$columns$auto_detect$trigger <- timestamp
R/fct_data_processing.R,triggers,168,"        cat(""DEBUG: [PHASE4] Synced auto_detect_trigger to centralized state\n"")"
R/fct_data_processing.R,triggers,179,  # UNIFIED EVENT SYSTEM: File upload auto-detection triggers are now handled by data_loaded events
R/fct_data_processing.R,triggers,181,  # chain handles all auto-detection triggering automatically
R/fct_data_processing.R,triggers,183,  # UNIFIED EVENT SYSTEM: File upload triggers are now handled by data_loaded events
R/fct_data_processing.R,triggers,190,  # emit$auto_detection_started() triggers auto-detection -> emit$ui_sync_needed() -> sync_ui_with_columns_unified()
R/fct_data_processing.R,triggers,299,  # UNIFIED EVENT SYSTEM: No longer returning autodetect_trigger
R/fct_data_processing.R,triggers,470,    # CRITICAL: Set debounce timestamp BEFORE triggering UI sync to prevent race condition
R/fct_data_processing.R,triggers,763,  # Sikker dato-konvertering uden at trigger reaktive loops
R/fct_data_processing.R,triggers,816,            # Apply conversion if successful (inside isolate to prevent reactive triggers)
R/fct_data_processing.R,triggers,993,    # Trigger UI sync for visual feedback on Kolonnematch tab using reactive trigger
R/fct_data_processing.R,triggers,1000,    # Use reactive trigger with timestamp to force reactivity
R/fct_data_processing.R,triggers,1010,      timestamp = as.numeric(Sys.time())  # Force reactivity trigger
R/fct_data_processing.R,triggers,1016,    # CRITICAL: Set debounce timestamp BEFORE triggering UI sync to prevent race condition
R/fct_data_processing.R,triggers,1044,"                ui_sync_triggered = TRUE,"
R/fct_data_processing.R,triggers,1199,  # NAVIGATION TRIGGER: Create reactive that uses the navigation trigger
R/fct_data_processing.R,triggers,1200,"  app_data_reactive <- eventReactive(app_state$navigation$trigger, {"
R/fct_data_processing.R,triggers,1202,"    debug_reactive_execution(""app_data_reactive"", ""trigger_fired"","
R/fct_data_processing.R,triggers,1203,"                            list(trigger_value = app_state$navigation$trigger),"
R/fct_data_processing.R,triggers,1208,"    cat(""DEBUG: [DATA_TABLE] Table reactive triggered\n"")"
R/fct_data_processing.R,triggers,1209,"    cat(""DEBUG: [DATA_TABLE] trigger_value:"", app_state$navigation$trigger, ""\n"")"
R/fct_data_processing.R,triggers,1231,    version_trigger <- app_state$session$table_version
R/fct_data_processing.R,triggers,1377,          # Emit event to trigger downstream effects
R/fct_data_processing.R,triggers,1411,    # Emit event to trigger downstream effects
R/fct_data_processing.R,session_couple,497,  session_id <- if (!is.null(session)) session$token else NULL
R/fct_data_processing.R,session_couple,1204,                            session_id = session$token)
R/fct_data_processing.R,session_couple,1215,                            session_id = session$token)
R/fct_data_processing.R,session_couple,1231,    version_trigger <- app_state$session$table_version
R/fct_data_processing.R,session_couple,1276,      restoring_session_check <- app_state$session$restoring_session
R/fct_data_processing.R,isolate_usage,105,      isolate({
R/fct_data_processing.R,isolate_usage,766,    isolate({
R/fct_data_processing.R,isolate_usage,962,  isolate({
R/fct_file_operations.R,loose_observers,16,"  observeEvent(input$data_file, {"
R/fct_file_operations.R,direct_input,16,"  observeEvent(input$data_file, {"
R/fct_file_operations.R,direct_input,19,"                          list(filename = input$data_file$name,"
R/fct_file_operations.R,direct_input,20,"                               size = input$data_file$size,"
R/fct_file_operations.R,direct_input,21,"                               type = input$data_file$type),"
R/fct_file_operations.R,direct_input,25,    req(input$data_file)
R/fct_file_operations.R,direct_input,32,"    log_debug(paste(""- Name:"", input$data_file$name), ""FILE_UPLOAD"")"
R/fct_file_operations.R,direct_input,33,"    log_debug(paste(""- Size:"", input$data_file$size, ""bytes""), ""FILE_UPLOAD"")"
R/fct_file_operations.R,direct_input,34,"    log_debug(paste(""- Type:"", input$data_file$type), ""FILE_UPLOAD"")"
R/fct_file_operations.R,direct_input,35,"    log_debug(paste(""- Path:"", input$data_file$datapath), ""FILE_UPLOAD"")"
R/fct_file_operations.R,direct_input,39,"                filename = input$data_file$name,"
R/fct_file_operations.R,direct_input,40,"                size_bytes = input$data_file$size,"
R/fct_file_operations.R,direct_input,41,                file_type = input$data_file$type
R/fct_file_operations.R,direct_input,48,"    validation_result <- validate_uploaded_file(input$data_file, session$token)"
R/fct_file_operations.R,direct_input,54,                  filename = input$data_file$name
R/fct_file_operations.R,direct_input,109,    file_path <- input$data_file$datapath
R/fct_file_operations.R,direct_input,110,    file_ext <- tools::file_ext(input$data_file$name)
R/fct_file_operations.R,direct_input,151,"        error_result <- handle_upload_error(e, input$data_file, session$token)"
R/fct_file_operations.R,direct_input,721,"    paste(""• Titel:"", if (is.null(input$indicator_title) || input$indicator_title == """") ""Ikke angivet"" else input$indicator_title),"
R/fct_file_operations.R,direct_input,723,"    paste(""• Beskrivelse:"", if (is.null(input$indicator_description) || input$indicator_description == """") ""Ikke angivet"" else input$indicat"
R/fct_file_operations.R,direct_input,726,"    paste(""• Chart Type:"", if (is.null(input$chart_type)) ""Seriediagram (Run Chart)"" else input$chart_type),"
R/fct_file_operations.R,direct_input,727,"    paste(""• X-akse:"", if (is.null(input$x_column) || input$x_column == """") ""Ikke valgt"" else input$x_column, ""(tid/observation)""),"
R/fct_file_operations.R,direct_input,728,"    paste(""• Y-akse:"", if (is.null(input$y_column) || input$y_column == """") ""Ikke valgt"" else input$y_column, ""(værdier)""),"
R/fct_file_operations.R,direct_input,729,"    if (!is.null(input$n_column) && input$n_column != """") paste(""• Nævner:"", input$n_column) else NULL,"
R/fct_file_operations.R,direct_input,730,"    paste(""• Målsætninger:"", ifelse(if (is.null(input$show_targets)) FALSE else input$show_targets, ""Vist"", ""Skjult"")),"
R/fct_file_operations.R,direct_input,731,"    paste(""• Faser:"", ifelse(if (is.null(input$show_phases)) FALSE else input$show_phases, ""Vist"", ""Skjult"")),"
R/fct_file_operations.R,direct_input,743,"    paste(""• Chart Type Code:"", get_qic_chart_type(if (is.null(input$chart_type)) ""Seriediagram (Run Chart)"" else input$chart_type)),"
R/fct_file_operations.R,triggers,24,"    log_debug(""File upload triggered"", ""FILE_UPLOAD"")"
R/fct_file_operations.R,triggers,161,  # The event system automatically triggers auto-detection when new data is loaded
R/fct_file_operations.R,triggers,200,    # Emit data_loaded event to trigger unified event system
R/fct_file_operations.R,triggers,237,    # Emit data_loaded event to trigger unified event system
R/fct_file_operations.R,triggers,258,"      cat(""DEBUG: [EXCEL_UPLOAD] ⚠️ No emit API available - data loaded but no event triggered\n"")"
R/fct_file_operations.R,triggers,259,"      log_debug(""⚠️ No emit API available for event triggering"", ""EXCEL_READ"")"
R/fct_file_operations.R,triggers,406,  # Emit data_loaded event to trigger unified event system
R/fct_file_operations.R,triggers,422,  # ROBUST AUTO-DETECT: Enhanced auto-detection triggering with validation
R/fct_file_operations.R,triggers,423,"  log_debug(""Setting auto-detect trigger with validation..."", ""CSV_READ"")"
R/fct_file_operations.R,triggers,432,"    cat(""DEBUG: [FILE_UPLOAD] ⚠️ No emit API available - data loaded but no event triggered\n"")"
R/fct_file_operations.R,triggers,433,"    log_debug(""⚠️ No emit API available for event triggering"", ""CSV_READ"")"
R/fct_file_operations.R,triggers,983,"  debug_log(""Enhanced error handling triggered"", ""ERROR_HANDLING"", level = ""ERROR"","
R/fct_file_operations.R,session_couple,22,                          session$token)
R/fct_file_operations.R,session_couple,28,"    upload_tracer <- debug_workflow_tracer(""file_upload_workflow"", app_state, session$token)"
R/fct_file_operations.R,session_couple,43,              session_id = session$token)
R/fct_file_operations.R,session_couple,48,"    validation_result <- validate_uploaded_file(input$data_file, session$token)"
R/fct_file_operations.R,session_couple,56,                session_id = session$token)
R/fct_file_operations.R,session_couple,98,              session_id = session$token)
R/fct_file_operations.R,session_couple,127,"          debug_log(""Starting Excel file processing"", ""FILE_UPLOAD_FLOW"", level = ""INFO"", session_id = session$token)"
R/fct_file_operations.R,session_couple,133,"          debug_log(""Starting CSV file processing"", ""FILE_UPLOAD_FLOW"", level = ""INFO"", session_id = session$token)"
R/fct_file_operations.R,session_couple,134,"          handle_csv_upload(file_path, app_state, session$token, emit)"
R/fct_file_operations.R,session_couple,142,"        debug_log(""File upload workflow completed successfully"", ""FILE_UPLOAD_FLOW"", level = ""INFO"", session_id = session$token)"
R/fct_file_operations.R,session_couple,151,"        error_result <- handle_upload_error(e, input$data_file, session$token)"
R/fct_file_operations.R,session_couple,204,    app_state$session$file_uploaded <- TRUE
R/fct_file_operations.R,session_couple,241,    app_state$session$file_uploaded <- TRUE
R/fct_file_operations.R,session_couple,410,  app_state$session$file_uploaded <- TRUE
R/fct_file_operations.R,session_couple,738,"    paste(""• Data kilde:"", if (app_state$session$file_uploaded) ""File Upload"" else ""Manuel indtastning""),"
R/fct_file_operations.R,isolate_usage,216,    isolate({
R/fct_spc_calculations.R,qic_calls,656,"      # qicharts2::qic(x = Dato, y = `Tæller`, n = `Nævner`, part = c(12), data = data, return.data = TRUE)"
R/fct_visualization_server.R,parallel_state,81,"  last_valid_config <- reactiveVal(list(x_col = NULL, y_col = NULL, n_col = NULL, chart_type = ""run""))"
R/fct_visualization_server.R,loose_observers,22,"    active_data_event <- eventReactive(app_state$navigation$trigger, {"
R/fct_visualization_server.R,loose_observers,161,  observe({
R/fct_visualization_server.R,direct_input,105,"      chart_type = get_qic_chart_type(if (is.null(input$chart_type)) ""Seriediagram (Run Chart)"" else input$chart_type)"
R/fct_visualization_server.R,direct_input,113,"    x_col <- if (!is.null(input$x_column) && input$x_column != """") input$x_column else NULL"
R/fct_visualization_server.R,direct_input,114,"    y_col <- if (!is.null(input$y_column) && input$y_column != """") input$y_column else NULL"
R/fct_visualization_server.R,direct_input,115,"    n_col <- if (!is.null(input$n_column) && input$n_column != """") input$n_column else NULL"
R/fct_visualization_server.R,direct_input,121,"      chart_type = get_qic_chart_type(if (is.null(input$chart_type)) ""Seriediagram (Run Chart)"" else input$chart_type)"
R/fct_visualization_server.R,direct_input,151,"        chart_type = get_qic_chart_type(if (is.null(input$chart_type)) ""Seriediagram (Run Chart)"" else input$chart_type)"
R/fct_visualization_server.R,direct_input,176,"      chart_selection <- if (is.null(input$chart_type)) ""Seriediagram (Run Chart)"" else input$chart_type"
R/fct_visualization_server.R,direct_input,180,"      if (is.null(input$target_value) || input$target_value == """") {"
R/fct_visualization_server.R,direct_input,191,"        return(parse_danish_target(input$target_value, y_numeric))"
R/fct_visualization_server.R,direct_input,193,"        return(parse_danish_target(input$target_value, NULL))"
R/fct_visualization_server.R,direct_input,197,"      if (is.null(input$centerline_value) || input$centerline_value == """") {"
R/fct_visualization_server.R,direct_input,208,"        return(parse_danish_target(input$centerline_value, y_numeric))"
R/fct_visualization_server.R,direct_input,210,"        return(parse_danish_target(input$centerline_value, NULL))"
R/fct_visualization_server.R,direct_input,223,"      skift_col <- if (!is.null(input$skift_column) && input$skift_column != """") {"
R/fct_visualization_server.R,direct_input,224,        input$skift_column
R/fct_visualization_server.R,direct_input,253,"      frys_col <- if (!is.null(input$frys_column) && input$frys_column != """") {"
R/fct_visualization_server.R,direct_input,254,        input$frys_column
R/fct_visualization_server.R,direct_input,268,"      if (is.null(input$y_axis_unit) || input$y_axis_unit == """") {"
R/fct_visualization_server.R,direct_input,271,        return(input$y_axis_unit)
R/fct_visualization_server.R,direct_input,275,"      if (is.null(input$kommentar_column) || input$kommentar_column == """") {"
R/fct_visualization_server.R,direct_input,278,        return(input$kommentar_column)
R/fct_visualization_server.R,triggers,14,  # UNIFIED NAVIGATION: Use passed app_data_reactive or create fallback with unified navigation trigger
R/fct_visualization_server.R,triggers,21,    # Fallback: Create eventReactive using unified navigation trigger
R/fct_visualization_server.R,triggers,22,"    active_data_event <- eventReactive(app_state$navigation$trigger, {"
R/fct_visualization_server.R,triggers,24,"      debug_reactive_execution(""active_data_event"", ""visualization_trigger_fired"","
R/fct_visualization_server.R,triggers,25,"                              list(trigger_value = app_state$navigation$trigger),"
R/fct_visualization_server.R,triggers,28,"    log_debug(""[PLOT_DATA] Active data reactive triggered"", ""PLOT_DATA"")"
R/fct_visualization_server.R,triggers,29,"    log_debug(""[PLOT_DATA] Navigation trigger fired"", ""PLOT_DATA"")"
R/fct_visualization_server.R,triggers,86,"    log_debug(""auto_detected_config reactive triggered"", ""AUTO_DETECTED_CONFIG"")"
R/fct_visualization_server.R,triggers,128,"    log_debug(""column_config reactive triggered (simplified)"", ""COLUMN_CONFIG"")"
R/fct_visualization_server.R,session_couple,26,                              session_id = session$token)
R/mod_spc_chart.R,parallel_state,169,    cached_data <- reactiveVal(NULL)
R/mod_spc_chart.R,parallel_state,292,    plot_cache <- reactiveVal(NULL)
R/mod_spc_chart.R,parallel_state,293,    plot_cache_key <- reactiveVal(NULL)
R/mod_spc_chart.R,loose_observers,208,"    module_data_reactive <- eventReactive(app_state$navigation$trigger, {"
R/mod_spc_chart.R,loose_observers,531,    observe({
R/mod_spc_chart.R,triggers,166,"    log_debug(""Creating module-internal data reactive with navigation trigger"", ""MODULE"")"
R/mod_spc_chart.R,triggers,208,"    module_data_reactive <- eventReactive(app_state$navigation$trigger, {"
R/mod_spc_chart.R,triggers,209,"      log_debug(""Module data reactive triggered"", ""MODULE_DATA"")"
R/mod_spc_chart.R,triggers,210,"      log_debug(""Navigation trigger fired"", ""MODULE_DATA"")"
R/mod_spc_chart.R,triggers,569,"        log_debug(""Plot rendering triggered"", ""RENDER_PLOT"")"
R/mod_spc_chart.R,triggers,571,        # CRITICAL FIX: Force dependency on column config to trigger render after auto-detection
R/mod_spc_chart.R,session_couple,157,    ns <- session$ns
R/mod_spc_chart.R,isolate_usage,706,        data <- isolate(module_data_reactive())
R/mod_spc_chart.R,isolate_usage,707,"        chart_type <- isolate(chart_type_reactive()) %||% ""ukendt"""
R/mod_spc_chart.R,isolate_usage,733,        data <- isolate(module_data_reactive())
R/mod_spc_chart.R,isolate_usage,734,        config <- isolate(chart_config())
R/mod_spc_chart.R,isolate_usage,735,"        chart_type <- isolate(chart_type_reactive()) %||% ""run"""
R/utils_advanced_debug.R,triggers,192,        trigger_needed = app_state$columns$auto_detect$trigger_needed %||% FALSE
R/utils_advanced_debug.R,triggers,326,"#' tracer$step(""auto_detect_triggered"")"
R/utils_advanced_debug.R,session_couple,181,"        file_uploaded = app_state$session$file_uploaded %||% FALSE,"
R/utils_advanced_debug.R,session_couple,182,"        user_started_session = app_state$session$user_started_session %||% FALSE,"
R/utils_advanced_debug.R,session_couple,183,        auto_save_enabled = app_state$session$auto_save_enabled %||% TRUE
R/utils_end_to_end_debug.R,triggers,82,"debug_state_change <- function(component, state_path, old_value, new_value, trigger = NULL, session_id = NULL) {"
R/utils_end_to_end_debug.R,triggers,109,  if (!is.null(trigger)) {
R/utils_end_to_end_debug.R,triggers,110,"    cat(""DEBUG: [STATE_CHANGE] Trigger:"", trigger, ""\n"")"
R/utils_end_to_end_debug.R,triggers,122,              trigger = trigger
R/utils_event_system.R,loose_observers,12,#' This function creates observeEvent() handlers for all events
R/utils_event_system.R,loose_observers,23,"#' in one place, replacing the scattered observeEvent() calls"
R/utils_event_system.R,loose_observers,34,"  observeEvent(app_state$events$data_loaded, ignoreInit = TRUE, priority = OBSERVER_PRIORITIES$STATE_MANAGEMENT, {"
R/utils_event_system.R,loose_observers,44,"  observeEvent(app_state$events$data_changed, ignoreInit = TRUE, priority = OBSERVER_PRIORITIES$DATA_PROCESSING, {"
R/utils_event_system.R,loose_observers,52,"  observeEvent(app_state$events$auto_detection_started, ignoreInit = TRUE, priority = OBSERVER_PRIORITIES$AUTO_DETECT, {"
R/utils_event_system.R,loose_observers,69,"  observeEvent(app_state$events$auto_detection_completed, ignoreInit = TRUE, priority = OBSERVER_PRIORITIES$AUTO_DETECT, {"
R/utils_event_system.R,loose_observers,84,"  observeEvent(app_state$events$ui_sync_needed, ignoreInit = TRUE, priority = OBSERVER_PRIORITIES$UI_SYNC, {"
R/utils_event_system.R,loose_observers,94,"  observeEvent(app_state$events$ui_sync_completed, ignoreInit = TRUE, priority = OBSERVER_PRIORITIES$UI_SYNC, {"
R/utils_event_system.R,loose_observers,105,"  observeEvent(app_state$events$navigation_changed, ignoreInit = TRUE, priority = OBSERVER_PRIORITIES$STATUS_UPDATES, {"
R/utils_event_system.R,loose_observers,114,"  observeEvent(app_state$events$test_mode_ready, ignoreInit = TRUE, priority = OBSERVER_PRIORITIES$AUTO_DETECT, {"
R/utils_event_system.R,loose_observers,125,"  observeEvent(app_state$events$session_reset, ignoreInit = TRUE, priority = OBSERVER_PRIORITIES$CLEANUP, {"
R/utils_event_system.R,triggers,16,#' @param emit The emit API for triggering events
R/utils_event_system.R,triggers,108,    # Increment navigation trigger to update all eventReactive components
R/utils_event_system.R,triggers,109,    app_state$navigation$trigger <- app_state$navigation$trigger + 1L
R/utils_event_system.R,triggers,110,"    cat(""DEBUG: [EVENT] Navigation trigger incremented to:"", app_state$navigation$trigger, ""\n"")"
R/utils_event_system.R,triggers,143,#' instead of direct reactive triggers.
R/utils_event_system.R,triggers,146,#' @param emit The emit API for triggering events
R/utils_local_storage.R,session_couple,44,      session$sendCustomMessage(
R/utils_local_storage.R,session_couple,63,      session$sendCustomMessage(
R/utils_local_storage.R,session_couple,78,      session$sendCustomMessage(
R/utils_memory_management.R,parallel_state,344,  # Legacy values$ data assignments removed - unified state handles data lifecycle
R/utils_memory_management.R,session_couple,14,  session$onSessionEnded(function() {
R/utils_memory_management.R,session_couple,140,    app_state$session$file_uploaded <- FALSE
R/utils_memory_management.R,session_couple,141,    app_state$session$user_started_session <- FALSE
R/utils_memory_management.R,session_couple,142,    app_state$session$last_save_time <- NULL
R/utils_performance.R,parallel_state,58,#'   expensive_data_processing(values$current_data)
R/utils_performance.R,isolate_usage,207,          isolate(r())
R/utils_reactive_state.R,parallel_state,11,  reactiveValues(
R/utils_reactive_state.R,triggers,23,"    trigger_auto_detect = FALSE, # NEW: Flag to trigger auto-detect after upload"
R/utils_server_management.R,parallel_state,560,    # PHASE 4B: Legacy values$auto_detect_done assignment removed - using unified state only
R/utils_server_management.R,parallel_state,633,          # PHASE 4B: Legacy values$auto_detect_done assignment removed - using unified state only # Vil udløse auto-detekt
R/utils_server_management.R,parallel_state,635,          # PHASE 4B: Legacy values$initial_auto_detect_completed assignment removed - using unified state only # Reset for new data
R/utils_server_management.R,loose_observers,18,"  observeEvent(input$auto_restore_data,"
R/utils_server_management.R,loose_observers,157,"  observeEvent(input$manual_save, {"
R/utils_server_management.R,loose_observers,171,"  observeEvent(input$clear_saved, {"
R/utils_server_management.R,loose_observers,176,"  observeEvent(input$show_upload_modal, {"
R/utils_server_management.R,loose_observers,181,"  observeEvent(input$confirm_clear_saved, {"
R/utils_server_management.R,loose_observers,192,"  observeEvent(input$confirm_upload, {"
R/utils_server_management.R,loose_observers,524,"  observeEvent(input$start_new_session, {"
R/utils_server_management.R,loose_observers,572,"  observeEvent(input$upload_data_welcome, {"
R/utils_server_management.R,loose_observers,579,"  observeEvent(input$quick_start_demo, {"
R/utils_server_management.R,direct_input,18,"  observeEvent(input$auto_restore_data,"
R/utils_server_management.R,direct_input,20,      req(input$auto_restore_data)
R/utils_server_management.R,direct_input,29,          saved_state <- input$auto_restore_data
R/utils_server_management.R,direct_input,157,"  observeEvent(input$manual_save, {"
R/utils_server_management.R,direct_input,171,"  observeEvent(input$clear_saved, {"
R/utils_server_management.R,direct_input,176,"  observeEvent(input$show_upload_modal, {"
R/utils_server_management.R,direct_input,181,"  observeEvent(input$confirm_clear_saved, {"
R/utils_server_management.R,direct_input,187,    !is.null(input$data_file) && !is.null(input$data_file$datapath)
R/utils_server_management.R,direct_input,192,"  observeEvent(input$confirm_upload, {"
R/utils_server_management.R,direct_input,283,"      title = input$indicator_title,"
R/utils_server_management.R,direct_input,284,"      unit_type = input$unit_type,"
R/utils_server_management.R,direct_input,285,"      unit_select = input$unit_select,"
R/utils_server_management.R,direct_input,286,"      unit_custom = input$unit_custom,"
R/utils_server_management.R,direct_input,287,"      description = input$indicator_description,"
R/utils_server_management.R,direct_input,288,"      x_column = if (is.null(input$x_column) || input$x_column == """") """" else input$x_column,"
R/utils_server_management.R,direct_input,289,"      y_column = if (is.null(input$y_column) || input$y_column == """") """" else input$y_column,"
R/utils_server_management.R,direct_input,290,"      n_column = if (is.null(input$n_column) || input$n_column == """") """" else input$n_column,"
R/utils_server_management.R,direct_input,291,"      skift_column = if (is.null(input$skift_column) || input$skift_column == """") """" else input$skift_column,"
R/utils_server_management.R,direct_input,292,"      kommentar_column = if (is.null(input$kommentar_column) || input$kommentar_column == """") """" else input$kommentar_column,"
R/utils_server_management.R,direct_input,293,"      chart_type = input$chart_type,"
R/utils_server_management.R,direct_input,294,"      target_value = input$target_value,"
R/utils_server_management.R,direct_input,295,"      centerline_value = input$centerline_value,"
R/utils_server_management.R,direct_input,296,"      y_axis_unit = if (is.null(input$y_axis_unit) || input$y_axis_unit == """") ""count"" else input$y_axis_unit"
R/utils_server_management.R,direct_input,308,"  has_settings <- (!is.null(input$indicator_title) && input$indicator_title != """") ||"
R/utils_server_management.R,direct_input,309,"    (!is.null(input$indicator_description) && input$indicator_description != """") ||"
R/utils_server_management.R,direct_input,310,"    (!is.null(input$unit_select) && input$unit_select != """") ||"
R/utils_server_management.R,direct_input,311,"    (!is.null(input$unit_custom) && input$unit_custom != """") ||"
R/utils_server_management.R,direct_input,524,"  observeEvent(input$start_new_session, {"
R/utils_server_management.R,direct_input,572,"  observeEvent(input$upload_data_welcome, {"
R/utils_server_management.R,direct_input,579,"  observeEvent(input$quick_start_demo, {"
R/utils_server_management.R,triggers,98,              # Emit event to trigger downstream effects
R/utils_server_management.R,triggers,107,              # Emit event to trigger downstream effects
R/utils_server_management.R,triggers,357,  # Emit event to trigger downstream effects
R/utils_server_management.R,triggers,539,    # Emit event to trigger downstream effects
R/utils_server_management.R,triggers,542,    # REACTIVE WRAPPER FIX: Increment version to trigger reactive navigation
R/utils_server_management.R,triggers,626,          # Emit event to trigger downstream effects
R/utils_server_management.R,session_couple,34,            app_state$session$restoring_session <- TRUE
R/utils_server_management.R,session_couple,40,            app_state$session$auto_save_enabled <- FALSE
R/utils_server_management.R,session_couple,48,                app_state$session$restoring_session <- FALSE
R/utils_server_management.R,session_couple,50,                app_state$session$auto_save_enabled <- TRUE
R/utils_server_management.R,session_couple,112,            app_state$session$file_uploaded <- TRUE
R/utils_server_management.R,session_couple,145,          app_state$session$restoring_session <- FALSE
R/utils_server_management.R,session_couple,147,          app_state$session$auto_save_enabled <- TRUE
R/utils_server_management.R,session_couple,166,    app_state$session$last_save_time <- Sys.time()
R/utils_server_management.R,session_couple,197,    app_state$session$user_started_session <- TRUE
R/utils_server_management.R,session_couple,198,    app_state$session$file_uploaded <- FALSE  # Will be set to TRUE by actual file upload handler
R/utils_server_management.R,session_couple,207,    last_save_time_check <- app_state$session$last_save_time
R/utils_server_management.R,session_couple,313,    (!is.null(app_state$session$last_save_time))
R/utils_server_management.R,session_couple,339,  app_state$session$last_save_time <- NULL
R/utils_server_management.R,session_couple,366,  app_state$session$file_uploaded <- FALSE
R/utils_server_management.R,session_couple,368,  app_state$session$user_started_session <- TRUE # NEW: Set flag that user has started
R/utils_server_management.R,session_couple,497,"        if (!is.null(app_state$session$last_save_time)) tags$li(""Fjerne gemt session fra lokal storage""),"
R/utils_server_management.R,session_couple,549,    app_state$session$file_uploaded <- FALSE
R/utils_server_management.R,session_couple,551,    app_state$session$user_started_session <- TRUE
R/utils_server_management.R,session_couple,556,    app_state$session$file_name <- NULL
R/utils_server_management.R,session_couple,568,"    cat(""DEBUG: [WELCOME_PAGE] app_state$session$user_started_session set to TRUE\n"")"
R/utils_server_management.R,session_couple,629,          app_state$session$file_uploaded <- TRUE
R/utils_server_management.R,session_couple,631,          app_state$session$user_started_session <- TRUE
R/utils_server_management.R,session_couple,640,"          app_state$session$file_name <- ""Eksempel data (SPC demo)"""
R/utils_server_management.R,isolate_usage,230,  isolate({
R/utils_server_management.R,isolate_usage,281,  isolate({
R/utils_server_management.R,isolate_usage,378,  isolate({
R/utils_session_helpers.R,loose_observers,16,"  app_data_reactive <- eventReactive(app_state$navigation$trigger, {"
R/utils_session_helpers.R,loose_observers,185,  obs_data_save <- observe({
R/utils_session_helpers.R,loose_observers,235,  obs_settings_save <- observe({
R/utils_session_helpers.R,loose_observers,276,  observe({
R/utils_session_helpers.R,direct_input,246,"          input$indicator_title,"
R/utils_session_helpers.R,direct_input,247,"          input$unit_type,"
R/utils_session_helpers.R,direct_input,248,"          input$unit_select,"
R/utils_session_helpers.R,direct_input,249,"          input$unit_custom,"
R/utils_session_helpers.R,direct_input,250,"          input$indicator_description,"
R/utils_session_helpers.R,direct_input,251,"          input$x_column,"
R/utils_session_helpers.R,direct_input,252,"          input$y_column,"
R/utils_session_helpers.R,direct_input,253,"          input$n_column,"
R/utils_session_helpers.R,direct_input,254,"          input$skift_column,"
R/utils_session_helpers.R,direct_input,255,"          input$kommentar_column,"
R/utils_session_helpers.R,direct_input,256,"          input$chart_type,"
R/utils_session_helpers.R,direct_input,257,"          input$target_value,"
R/utils_session_helpers.R,direct_input,258,          input$y_axis_unit
R/utils_session_helpers.R,direct_input,318,"    if (input$unit_type == ""select"") {"
R/utils_session_helpers.R,direct_input,328,"      selected_unit <- if (is.null(input$unit_select)) """" else input$unit_select"
R/utils_session_helpers.R,direct_input,335,"      return(if (is.null(input$unit_custom)) """" else input$unit_custom)"
R/utils_session_helpers.R,direct_input,344,"    base_title <- if (is.null(input$indicator_title) || input$indicator_title == """") ""SPC Analyse"" else input$indicator_title"
R/utils_session_helpers.R,triggers,14,  # UNIFIED NAVIGATION: Event-driven pattern using app_state navigation trigger
R/utils_session_helpers.R,triggers,16,"  app_data_reactive <- eventReactive(app_state$navigation$trigger, {"
R/utils_session_helpers.R,triggers,19,"    cat(""DEBUG: [NAVIGATION_UNIFIED] app_data_reactive triggered\n"")"
R/utils_session_helpers.R,triggers,20,"    cat(""DEBUG: [NAVIGATION_UNIFIED] trigger_value:"", app_state$navigation$trigger, ""\n"")"
R/utils_session_helpers.R,triggers,30,    # This now properly triggers when navigation events are emitted
R/utils_session_helpers.R,triggers,148,  auto_save_trigger <- debounce(reactive({
R/utils_session_helpers.R,triggers,186,    save_data <- auto_save_trigger()
R/utils_session_helpers.R,triggers,200,  settings_save_trigger <- debounce(reactive({
R/utils_session_helpers.R,triggers,236,    save_data <- settings_save_trigger()
R/utils_session_helpers.R,triggers,265,  table_cleanup_trigger <- debounce(reactive({
R/utils_session_helpers.R,triggers,270,      Sys.time()  # Return timestamp to trigger cleanup
R/utils_session_helpers.R,triggers,277,    cleanup_time <- table_cleanup_trigger()
R/utils_session_helpers.R,triggers,292,  # Navigation is now managed through app_state$navigation$trigger and emit$navigation_changed()
R/utils_session_helpers.R,session_couple,60,      file_uploaded_check <- app_state$session$file_uploaded
R/utils_session_helpers.R,session_couple,63,      user_started_session_check <- app_state$session$user_started_session
R/utils_session_helpers.R,session_couple,110,    file_uploaded_check <- app_state$session$file_uploaded
R/utils_session_helpers.R,session_couple,154,    auto_save_enabled_check <- app_state$session$auto_save_enabled
R/utils_session_helpers.R,session_couple,157,    restoring_session_check <- app_state$session$restoring_session
R/utils_session_helpers.R,session_couple,191,    app_state$session$last_save_time <- save_data$timestamp
R/utils_session_helpers.R,session_couple,206,    auto_save_enabled_check <- app_state$session$auto_save_enabled
R/utils_session_helpers.R,session_couple,209,    restoring_session_check <- app_state$session$restoring_session
R/utils_session_helpers.R,session_couple,241,    app_state$session$last_save_time <- save_data$timestamp
