% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_server_initialization.R
\name{initialize_app_infrastructure}
\alias{initialize_app_infrastructure}
\title{Initialize App Infrastructure}
\usage{
initialize_app_infrastructure(session, hashed_token, session_debugger)
}
\arguments{
\item{session}{Shiny session object}

\item{hashed_token}{Hashed session token for logging}

\item{session_debugger}{Session debugger object}
}
\value{
List with app_state, emit, ui_service components
}
\description{
Sets up core app infrastructure including state management, event system,
UI service, and logging.
}
\details{
This function initializes the core infrastructure needed for the SPC app:
\itemize{
\item Creates centralized app_state for reactive state management
\item Sets up event-driven architecture via emit API
\item Initializes UI update service for programmatic updates
\item Configures shinylogs tracking (if enabled)
\item Registers event listeners with proper cleanup
}
}
\examples{
\dontrun{
# In main_app_server()
session_token <- session$token \%||\% paste0("session_", Sys.time())
hashed_token <- hash_session_token(session_token)
session_debugger <- debug_session_lifecycle(hashed_token, session)

infrastructure <- initialize_app_infrastructure(
  session = session,
  hashed_token = hashed_token,
  session_debugger = session_debugger
)

# Extract components for use in server logic
app_state <- infrastructure$app_state
emit <- infrastructure$emit
ui_service <- infrastructure$ui_service

# Use emit API to trigger events
emit$data_updated(context = "file_upload")
emit$auto_detection_started()
}

}
