% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_event_context_handlers.R
\name{handle_data_update_by_context}
\alias{handle_data_update_by_context}
\title{Handle Data Update By Context}
\usage{
handle_data_update_by_context(
  update_context,
  app_state,
  emit,
  input,
  output,
  session,
  ui_service
)
}
\arguments{
\item{update_context}{Update context metadata (list with $context field)}

\item{app_state}{Centralized app state}

\item{emit}{Event emission API}

\item{input}{Shiny input}

\item{output}{Shiny output}

\item{session}{Shiny session}

\item{ui_service}{UI service for UI updates}
}
\description{
Main dispatcher using strategy pattern to handle data updates based on context.
}
\details{
\subsection{Strategy Pattern Implementation}{

This function classifies the update context and delegates to the appropriate
handler function, reducing cyclomatic complexity from ~12 to ~3.

\strong{Handler Mapping}:
\itemize{
\item \code{load} → \code{handle_load_context()}
\item \code{table_edit} → \code{handle_table_edit_context()}
\item \code{data_change} → \code{handle_data_change_context()}
\item \code{general} → \code{handle_general_context()}
}
}

\subsection{Cyclomatic Complexity Reduction}{

\strong{Before} (nested if/else):

\if{html}{\out{<div class="sourceCode r">}}\preformatted{if (is_load_context) \{
  if (!is.null(data)) \{ ... \}
\} else if (is_table_edit) \{
  ...
\} else if (is_change_context) \{
  safe_operation(\{ ... \})
  emit$navigation_changed()
  emit$visualization_update_needed()
\} else \{
  safe_operation(\{ ... \})
\}
}\if{html}{\out{</div>}}

\strong{Complexity}: 12

\strong{After} (strategy pattern):

\if{html}{\out{<div class="sourceCode r">}}\preformatted{context_type <- classify_update_context(update_context)
switch(context_type, ...)
}\if{html}{\out{</div>}}

\strong{Complexity}: ~3
}
}
