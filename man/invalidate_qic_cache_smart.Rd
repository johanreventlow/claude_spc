% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_qic_cache_invalidation.R
\name{invalidate_qic_cache_smart}
\alias{invalidate_qic_cache_smart}
\title{Smart QIC Cache Invalidation}
\usage{
invalidate_qic_cache_smart(app_state, update_context = NULL)
}
\arguments{
\item{app_state}{Centralized app state with cache object}

\item{update_context}{List with context and details about the update}
}
\description{
Context-aware cache invalidation that only clears cache when necessary.
Structural changes (upload, column changes) trigger full clear, while
cosmetic changes (comments) preserve cache for performance.
}
\details{
\subsection{Cache Invalidation Strategy}{

\strong{Full Cache Clear} (structural changes):
\itemize{
\item \code{upload}: New data loaded
\item \code{column_added}: Data structure changed
\item \code{column_removed}: Data structure changed
\item \code{load}: Initial data load
\item \code{new}: New data created
}

\strong{Selective Invalidation} (data value changes):
\itemize{
\item \code{table_cells_edited}: Only affected chart types
\item \code{value_change}: Specific column updates
\item \code{edit}: General data edits
\item \code{modify}: Data modifications
}

\strong{Cache Preserved} (cosmetic changes):
\itemize{
\item \code{comment_updated}: Comments don't affect calculations
\item \code{ui_update}: UI-only changes
\item \code{navigation}: Navigation changes
}
}

\subsection{Performance Impact}{

Expected improvements:
\itemize{
\item 60-80\% fewer cache recalculations
\item Cache hit rate >80\% (from ~40\%)
\item Faster UX for comment updates and table edits
}
}
}
