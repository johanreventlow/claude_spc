% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_ui_updates.R
\name{create_ui_update_service}
\alias{create_ui_update_service}
\title{Create UI Update Service}
\usage{
create_ui_update_service(session, app_state)
}
\arguments{
\item{session}{Shiny session object}

\item{app_state}{Centralized app state}

\item{choices}{Named vector of choices. If NULL, generated from current_data}

\item{selected}{Named list of selected values for each column}

\item{columns}{Vector of column input IDs to update}

\item{clear_selections}{If TRUE, clear all selections

Update Form Fields

Unified function for updating form field inputs from metadata.
Used for session restore and metadata loading operations.}

\item{metadata}{List containing field values to update}

\item{fields}{Vector of field names to update. If NULL, updates all available fields

Reset Form Fields

Unified function for resetting form fields to default values.
Used for "Start ny session" and similar reset operations.

Show/Hide UI Elements

Unified function for showing/hiding UI elements conditionally.}

\item{element_id}{Character string of element ID}

\item{show}{Logical, whether to show (TRUE) or hide (FALSE) the element

Validate Form Fields

Enhanced function for validating form field values with feedback.}

\item{field_rules}{List of validation rules for each field}

\item{show_feedback}{Whether to show validation feedback to the user

Show User Feedback

Unified function for showing user feedback (notifications, modals, etc.).}

\item{message}{Character string with the message to show}

\item{type}{Type of feedback: "success", "info", "warning", "error"}

\item{duration}{Duration in seconds (NULL for persistent)}

\item{modal}{Whether to show as modal dialog instead of notification

Update UI State Conditionally

Enhanced function for updating UI state based on conditions.}

\item{conditions}{Named list of conditions and corresponding UI updates}
}
\value{
List of UI update functions
}
\description{
Creates a centralized service for managing UI updates in a consistent way.
This service provides unified patterns for column choice updates, form field updates,
and other common UI operations.
}
\examples{
\dontrun{
ui_service <- create_ui_update_service(session, app_state)
ui_service$update_column_choices()
}

}
