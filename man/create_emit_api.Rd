% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/state_management.R
\name{create_emit_api}
\alias{create_emit_api}
\title{Create Event Emit API}
\usage{
create_emit_api(app_state)
}
\arguments{
\item{app_state}{The app state object with reactive event bus}
}
\value{
List of emit functions
}
\description{
Creates a clean API for emitting events to the app_state event bus.
This function returns a list of emit functions that can be called
to trigger specific events throughout the application.
}
\details{
Each emit function increments the corresponding event counter in
app_state$events, triggering any shiny::observeEvent() listeners.
Using shiny::isolate() ensures the emit functions don't create
unintended reactive dependencies.
}
\examples{
\dontrun{
emit <- create_emit_api(app_state)
emit$data_loaded() # Triggers shiny::observeEvent(app_state$events$data_loaded, ...)
}
}
