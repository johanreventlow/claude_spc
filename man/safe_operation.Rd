% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_error_handling.R
\name{safe_operation}
\alias{safe_operation}
\title{Safe operation wrapper with error handling}
\usage{
safe_operation(
  operation_name,
  code,
  fallback = NULL,
  session = NULL,
  show_user = FALSE,
  error_type = "general"
)
}
\arguments{
\item{operation_name}{Character string describing the operation for logging}

\item{code}{Expression or code block to execute safely}

\item{fallback}{Default value to return if operation fails. Default is NULL.}

\item{session}{Shiny session object for user notifications (optional)}

\item{show_user}{Logical, whether to show error to user (default FALSE)}

\item{error_type}{Character string categorizing the error type for logging}
}
\value{
Result of code execution, or fallback value if error occurs
}
\description{
Provides a standardized way to execute code with error handling and
fallback behavior. Designed to prevent crashes in reactive contexts
and provide graceful degradation.
}
\examples{
\dontrun{
# Basic usage
result <- safe_operation(
  "Data processing",
  code = { process_data(input_data) },
  fallback = empty_data()
)

# With session and user notification
result <- safe_operation(
  "File upload",
  code = { read.csv(file_path) },
  fallback = NULL,
  session = session,
  show_user = TRUE
)
}
}
