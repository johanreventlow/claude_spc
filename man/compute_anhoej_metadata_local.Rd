% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_spc_bfh_service.R
\name{compute_anhoej_metadata_local}
\alias{compute_anhoej_metadata_local}
\title{Compute Anhøj Metadata Locally for UI Display}
\usage{
compute_anhoej_metadata_local(data, config)
}
\arguments{
\item{data}{data.frame. Input dataset with SPC data. Required.}

\item{config}{list. Configuration with required keys:
\describe{
\item{x_col}{character. X-axis column name. Required.}
\item{y_col}{character. Y-axis column name. Required.}
\item{chart_type}{character. Chart type (run, i, p, etc.). Required.}
\item{n_col}{character. Denominator column for rate charts. Optional.}
}}
}
\value{
list with Anhøj rules metadata:
\describe{
\item{runs_signal}{logical. TRUE if runs violation detected}
\item{crossings_signal}{logical. TRUE if crossings violation detected}
\item{longest_run}{numeric. Length of longest run}
\item{n_crossings}{numeric. Number of median crossings observed}
\item{n_crossings_min}{numeric. Minimum expected crossings}
}
Returns NULL on error (with structured logging).
}
\description{
Lightweight qicharts2::qic() call specifically for UI metrics (serielængde, antal kryds).
This function is separate from BFHcharts SPC calculation and only provides
presentation-layer metrics for value boxes.
}
\details{
\strong{Purpose:} Calculate Anhøj rules metadata locally using qicharts2 for UI display only.
This is NOT for SPC calculation - BFHcharts handles that. This function provides
supplementary metrics (runs length, crossings count) for UI value boxes.

\strong{Architecture Context:}
\itemize{
\item BFHcharts: SPC engine (calculation + visualization)
\item SPCify: Integration layer + business logic
\item This function: UI presentation concern (Anhøj metrics for display)
}

\strong{Separation of Concerns:}
This function is intentionally separate from BFHcharts SPC workflow to maintain
clear package boundaries. When BFHcharts adds metadata return support, this can
be deprecated.
}
\examples{
\dontrun{
# Basic run chart metadata
metadata <- compute_anhoej_metadata_local(
  data = hospital_data,
  config = list(
    x_col = "month",
    y_col = "infections",
    chart_type = "run"
  )
)
print(metadata$longest_run)

# P-chart with denominator
metadata <- compute_anhoej_metadata_local(
  data = surgical_data,
  config = list(
    x_col = "date",
    y_col = "complications",
    n_col = "procedures",
    chart_type = "p"
  )
)
print(metadata$runs_signal)
}

}
