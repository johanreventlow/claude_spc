% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_performance.R,
%   R/utils_performance_caching.R
\name{create_performance_debounced}
\alias{create_performance_debounced}
\title{Debounced reactive with performance tracking}
\usage{
create_performance_debounced(
  reactive_expr,
  cache_key,
  debounce_millis = 500,
  cache_timeout = CACHE_CONFIG$default_timeout_seconds
)

create_performance_debounced(
  reactive_expr,
  cache_key,
  debounce_millis = 500,
  cache_timeout = CACHE_CONFIG$default_timeout_seconds
)
}
\arguments{
\item{reactive_expr}{Reactive expression}

\item{cache_key}{Cache key (string eller function)}

\item{debounce_millis}{Debounce delay i millisekunder}

\item{cache_timeout}{Cache timeout i sekunder (default: CACHE_CONFIG$default_timeout_seconds)}

\item{r}{Reactive expression der skal debounces (eller function i non-reactive context)}

\item{millis}{Numeric - debounce delay i millisekunder}

\item{operation_name}{Character string med operation navn til logging}
}
\value{
Debounced reactive expression eller function (context-afhængig)

Debounced og cached reactive expression
}
\description{
Enhanced version af shiny::debounce med performance monitoring.
Tracker både debounce effectiveness og execution performance.
Virker både i reactive context og uden.

Kombinerer caching med debouncing for optimal performance på
hyppigt-opdaterede reactive expressions.
}
\examples{
optimized_reactive <- create_performance_debounced(
  reactive({
    expensive_computation(input$data)
  }),
  "computation",
  millis = 500,
  cache_timeout = CACHE_CONFIG$default_timeout_seconds
)

}
\seealso{
Other performance: 
\code{\link{clear_performance_cache}()},
\code{\link{create_cached_reactive}()},
\code{\link{evaluate_data_content_cached}()},
\code{\link{get_performance_stats}()},
\code{\link{measure_reactive_performance}()},
\code{\link{monitor_memory_usage}()}
}
\concept{performance}
