% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_spc_bfh_service.R
\name{compute_spc_results_bfh}
\alias{compute_spc_results_bfh}
\title{Compute SPC Results Using BFHchart Backend}
\usage{
compute_spc_results_bfh(
  data,
  x_var,
  y_var,
  chart_type,
  n_var = NULL,
  cl_var = NULL,
  freeze_var = NULL,
  part_var = NULL,
  notes_column = NULL,
  multiply = 1,
  ...
)
}
\arguments{
\item{data}{data.frame. Input dataset with SPC data. Required.}

\item{x_var}{character. Name of x-axis variable (time/sequence column). Required.}

\item{y_var}{character. Name of y-axis variable (measure/value column). Required.}

\item{chart_type}{character. SPC chart type. One of: "run", "i", "mr", "p", "pp",
"u", "up", "c", "g". Required. Use qicharts2-style codes (lowercase).}

\item{n_var}{character. Name of denominator variable for rate-based charts
(P, P', U, U' charts). Default NULL. Required for charts with denominators.}

\item{cl_var}{character. Name of control limit override variable. Allows custom
centerline per data point. Default NULL (auto-calculate).}

\item{freeze_var}{character. Name of freeze period indicator variable. Marks
baseline period for control limit calculation. Default NULL (no freeze).}

\item{part_var}{character. Name of part/subgroup/phase variable. Enables
per-phase control limit calculation and Anhøj rule application. Default NULL.}

\item{notes_column}{character. Name of notes/comment column to display on plot.
Maps to BFHchart notes parameter or SPCify ggrepel layer. Default NULL.}

\item{multiply}{numeric. Multiplier applied to y-axis values for display scaling.
Common use: convert decimal proportions to percentages (multiply = 100).
Default 1 (no scaling).}

\item{...}{Additional arguments passed to BFHchart backend. Allows flexibility
for BFHchart-specific parameters without breaking SPCify interface.}
}
\value{
list with three components:
\describe{
\item{plot}{ggplot2 object. Rendered SPC chart with control limits, centerline,
and optional annotations. Compatible with SPCify plot customization functions.}
\item{qic_data}{tibble. Standardized data frame with SPC calculations. Columns:
\itemize{
\item x: X-axis values (dates or observation numbers)
\item y: Y-axis values (original or scaled measures)
\item cl: Centerline per data point (may vary by phase)
\item ucl: Upper control limit per data point
\item lcl: Lower control limit per data point
\item part: Phase/subgroup indicator (integer, starting at 1)
\item signal: Combined Anhøj signal (logical, TRUE if runs OR crossings violation)
\item .original_row_id: Row identifier for stable comment mapping
}
}
\item{metadata}{list. Chart configuration and diagnostic information:
\itemize{
\item chart_type: Chart type used
\item n_points: Number of data points processed
\item n_phases: Number of phases (if part_var specified)
\item freeze_applied: Logical indicating if freeze was applied
\item signals_detected: Count of Anhøj rule violations
\item bfh_version: BFHchart package version used
\item anhoej_rules: list with Anhøj rules metadata (runs_detected, crossings_detected, longest_run, n_crossings, n_crossings_min)
}
}
}
Returns NULL on error (with structured logging).
}
\description{
Primary facade function that wraps BFHchart functionality with SPCify conventions.
This function provides a stable interface that isolates the application from
BFHchart API changes, handles parameter mapping, validates inputs, and standardizes
output format for seamless integration with existing SPCify plot rendering.
}
\details{
\strong{Architectural Role:} Service layer facade implementing adapter pattern.
Coordinates validation, transformation, BFHchart invocation, and output formatting.

\strong{Workflow:}
\enumerate{
\item Input validation using existing SPCify validators
\item Parameter transformation (SPCify conventions → BFHchart API)
\item Safe BFHchart invocation with error handling
\item Output standardization (match qicharts2 format)
\item Structured logging and cache management
}

\strong{Error Handling:} All operations wrapped in \code{safe_operation()} with graceful
fallback. Errors logged with structured context for debugging.
}
\section{Notes Column Mapping}{

The \code{notes_column} parameter maps to BFHchart's comment/notes system. If BFHchart
does not provide native notes support, SPCify applies comments as a ggrepel layer
after BFHchart rendering (existing pattern). Comment handling includes:
\itemize{
\item Row ID stability via \code{.original_row_id} injection
\item XSS sanitization with Danish character support (æøå)
\item Intelligent truncation (40 char display, 100 char max)
\item Collision avoidance with \code{ggrepel::geom_text_repel()}
}
}

\examples{
\dontrun{
# Basic run chart
result <- compute_spc_results_bfh(
  data = hospital_data,
  x_var = "month",
  y_var = "infections",
  chart_type = "run"
)
print(result$plot)
summary(result$qic_data)

# P-chart with denominator and freeze period
result <- compute_spc_results_bfh(
  data = surgical_data,
  x_var = "date",
  y_var = "complications",
  n_var = "procedures",
  chart_type = "p",
  freeze_var = "baseline_indicator",
  multiply = 100
)

# Multi-phase I-chart with comments
result <- compute_spc_results_bfh(
  data = quality_data,
  x_var = "week",
  y_var = "defects",
  chart_type = "i",
  part_var = "intervention_phase",
  notes_column = "comment",
  multiply = 1
)

# Access standardized data
print(result$qic_data)
# Check metadata
print(result$metadata$signals_detected)
}

}
\seealso{
\code{\link{map_to_bfh_params}} for parameter transformation logic
\code{\link{add_comment_annotations}} for notes column handling
}
