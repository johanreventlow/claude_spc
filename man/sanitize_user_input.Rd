% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_export_validation.R,
%   R/utils_input_sanitization.R
\name{sanitize_user_input}
\alias{sanitize_user_input}
\title{Sanitize User Input for XSS Protection}
\usage{
sanitize_user_input(
  input_value,
  max_length = 255,
  allowed_chars = "A-Za-z0-9_æøåÆØÅ .-",
  html_escape = TRUE
)

sanitize_user_input(
  input_value,
  max_length = 255,
  allowed_chars = "A-Za-z0-9_æøåÆØÅ .-",
  html_escape = TRUE
)
}
\arguments{
\item{input_value}{Input værdi at sanitize (character, numeric, eller NULL)}

\item{max_length}{Maksimum længde på output (default: 255)}

\item{allowed_chars}{Regex pattern for tilladte karakterer}

\item{html_escape}{Skal HTML karakterer escapes? (default: TRUE)}
}
\value{
Sanitized string

Sanitized string, eller tom string hvis input er invalid
}
\description{
Renser bruger input for potentielle XSS angreb og fjerner ugyldige karakterer.
Understøtter danske karakterer (æøåÆØÅ) og basis tegnsætning.

Sikker validation og cleaning af bruger input for at forhindre XSS og injection.
}
\details{
Sanitization proces:
\enumerate{
\item Konverter NULL til tom string
\item Konverter til character hvis nødvendigt
\item HTML escape hvis aktiveret
\item Fjern ugyldige karakterer via regex
\item Trim whitespace
\item Truncate til max_length hvis specificeret
}
}
\examples{
\dontrun{
sanitize_user_input("<script>alert('XSS')</script>")
# "&lt;script&gt;alert('XSS')&lt;/script&gt;"

sanitize_user_input("København Sygehus @#$")
# "København Sygehus "
}

# Basic sanitization
sanitize_user_input("Kolonne navn & data")

# Column name sanitization
sanitize_user_input("x_column<script>", max_length = 50)

# Numeric input validation
sanitize_user_input(123.45)

}
