% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_spc_cache.R
\name{generate_spc_cache_key}
\alias{generate_spc_cache_key}
\title{Generate Backend-Agnostic SPC Cache Key}
\usage{
generate_spc_cache_key(data, config)
}
\arguments{
\item{data}{data.frame. Input dataset with SPC data. Required.}

\item{config}{list. SPC configuration with keys:
\describe{
\item{chart_type}{character. Chart type (run, i, p, etc.). Required.}
\item{x_column}{character. X-axis column name. Required.}
\item{y_column}{character. Y-axis column name. Required.}
\item{n_column}{character. Denominator column (optional).}
\item{cl_column}{character. Centerline override column (optional).}
\item{freeze_position}{integer. Freeze row position (optional).}
\item{part_positions}{integer vector. Part boundaries (optional).}
\item{target_value}{numeric. Target value (optional).}
\item{centerline_value}{numeric. Custom centerline (optional).}
\item{y_axis_unit}{character. Y-axis unit (optional).}
\item{multiply_by}{numeric. Scale multiplier (optional, default 1).}
}}
}
\value{
character. Cache key string in format: \code{"spc_{type}_{data}_{config}"}
Example: \code{"spc_run_a3f9e2b1c4d8_7e4f2a1b9c3d"}
}
\description{
Creates a deterministic cache key based on data signature and configuration.
Works with both BFHchart and qicharts2 backends by focusing on data and
configuration rather than backend-specific API parameters.
}
\details{
\strong{Cache Key Strategy:}
\itemize{
\item Data signature: xxhash64 of relevant data columns only (x, y, n, cl, etc.)
\item Config signature: xxhash64 of stable configuration parameters
\item Combined format: \code{"spc_{chart_type}_{data_sig}_{config_sig}"}
}

\strong{Backend Independence:}
This function generates the same cache key regardless of whether BFHchart
or qicharts2 is used, enabling cache sharing during A/B testing and
seamless backend migration.

\strong{Performance:}
\itemize{
\item Uses xxhash64 algorithm (5-10x faster than MD5)
\item Reuses shared data signatures from utils_data_signatures.R when available
\item Hashes only relevant columns, not entire dataset
}

\strong{Cache Invalidation:}
Cache keys automatically change when:
\itemize{
\item Data values change (new data_signature)
\item Configuration changes (chart type, freeze, part, target, etc.)
\item Column mappings change (x, y, n columns)
}
}
\examples{
\dontrun{
# Basic run chart
config <- list(
  chart_type = "run",
  x_column = "date",
  y_column = "value"
)
key <- generate_spc_cache_key(data, config)

# P-chart with denominator and freeze
config <- list(
  chart_type = "p",
  x_column = "date",
  y_column = "complications",
  n_column = "procedures",
  freeze_position = 12,
  multiply_by = 100
)
key <- generate_spc_cache_key(data, config)

# Multi-phase chart
config <- list(
  chart_type = "i",
  x_column = "week",
  y_column = "defects",
  part_positions = c(10, 20, 30),
  target_value = 5
)
key <- generate_spc_cache_key(data, config)
}

}
\seealso{
\code{\link{generate_shared_data_signature}} for data signature generation
\code{\link{cache_spc_result}} for caching SPC results
\code{\link{get_cached_spc_result}} for retrieving cached results
}
