% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/app_run.R
\name{run_app}
\alias{run_app}
\title{Run the SPC Shiny Application}
\usage{
run_app(
  port = NULL,
  launch_browser = NULL,
  options = list(),
  enable_test_mode = NULL,
  log_level = NULL,
  ...
)
}
\arguments{
\item{port}{Port number for the application (default: NULL for auto-assignment)}

\item{launch_browser}{TRUE for browser, FALSE for no launch, or leave default for environment-aware decision}

\item{options}{List of application options (golem-style configuration)}

\item{enable_test_mode}{TRUE/FALSE to force test mode, or NULL for auto-detection based on environment}

\item{log_level}{Set logging level for the session: "DEBUG", "INFO", "WARN", "ERROR", or NULL for auto-detection}

\item{...}{Additional arguments to pass to shiny::shinyApp()}
}
\description{
Run the SPC Shiny Application
}
\details{
This function implements golem-inspired patterns for robust Shiny app deployment.
It supports environment-aware configuration and graceful fallbacks for different
deployment contexts (development, production, testing).

Log levels determine what messages are displayed:
\describe{
\item{DEBUG}{All messages (most verbose) - ideal for troubleshooting reactive flows}
\item{INFO}{Informational messages and above - good for monitoring app behavior}
\item{WARN}{Warnings and errors only - standard production setting}
\item{ERROR}{Only error messages - minimal logging}
}
}
\examples{
\dontrun{
# Basic usage
run_app()

# Development with debug logging
run_app(port = 4040, log_level = "DEBUG")

# Troubleshooting with detailed logging
run_app(log_level = "DEBUG", enable_test_mode = TRUE)

# Production with minimal logging
run_app(log_level = "WARN", launch_browser = TRUE)
}

}
